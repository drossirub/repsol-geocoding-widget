System.register(["jimu-core","jimu-ui/advanced/setting-components","jimu-ui","jimu-core/react"],(function(e,t){var o={},a={},r={},l={};return{setters:[function(e){o.FormattedMessage=e.FormattedMessage,o.React=e.React},function(e){a.MapWidgetSelector=e.MapWidgetSelector,a.SettingRow=e.SettingRow,a.SettingSection=e.SettingSection},function(e){r.Checkbox=e.Checkbox,r.NumericInput=e.NumericInput,r.TextInput=e.TextInput},function(e){l.useEffect=e.useEffect}],execute:function(){e((()=>{var e={9244:e=>{"use strict";e.exports=o},8972:e=>{"use strict";e.exports=l},4321:e=>{"use strict";e.exports=r},9298:e=>{"use strict";e.exports=a}},t={};function c(o){var a=t[o];if(void 0!==a)return a.exports;var r=t[o]={exports:{}};return e[o](r,r.exports,c),r.exports}c.d=(e,t)=>{for(var o in t)c.o(t,o)&&!c.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},c.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),c.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},c.p="";var i={};return c.p=window.jimuConfig.baseUrl,(()=>{"use strict";c.r(i),c.d(i,{__set_webpack_public_path__:()=>s,default:()=>n});var e=c(9244);const t={GeocodeAPI:{Values:"https://srvarcgisdev.nexusgeografics.com/repsol/GeocodeAPI/GeocodePros/Values",Upload:"https://srvarcgisdev.nexusgeografics.com/repsol/GeocodeAPI/GeocodePros/Upload",Descargar:"https://srvarcgisdev.nexusgeografics.com/repsol/GeocodeAPI/GeocodePros/Descargar",Borrar:"https://srvarcgisdev.nexusgeografics.com/repsol/GeocodeAPI/GeocodePros/Borrar",GetMap:"https://srvarcgisdev.nexusgeografics.com/repsol/GeocodeAPI/GeocodePros/GetMap"},gridConfig:{rowsPerPage:6},refresh:{button:!0,doInterval:!1,time:.5}};var o=c(9298);const a={table_config:"Configuraci\xf3n de la Tabla",geocode_api_config:"Configuraci\xf3n de Geocode API",geocode_api_values:"API Valores",geocode_api_upload:"API Subida",geocode_api_download:"API Descarga",geocode_api_delete:"API Borrar",geocode_api_get_map:"API Obtener Mapa",table_rows_per_page:"Filas por P\xe1gina",label_codigo_pedido:"Codigo Pedido",label_nombre_fichero:"Nombre Fichero",label_tipo:"Tipo",label_filas_procesar:"Filas procesar",label_descripcion:"Descripcion",label_estado:"Estado",label_fecha_solicitud:"Fecha Solicitud",label_fecha_fin:"Fecha Fin",label_log_error:"LOG_ERROR",refresh_label:"Opciones de refresco de valores",refresh_button_label:"Bot\xf3n de refrescar valores",refresh_interval_button_label:"Activar refresco de valores autom\xe1tico",refresh_interval_time_label:"Tiempo de refresco autom\xe1tico (segundos)"};var r=c(4321),l=c(8972);const n=c=>{var i,n,s,d,g;const{config:u,onSettingChange:f,id:p}=c,[_,m]=e.React.useState(null===(i=null==u?void 0:u.refresh)||void 0===i?void 0:i.doInterval),v=(e,t)=>{const o=u.setIn(["GeocodeAPI",e],t);f({id:p,config:o})},b=e=>{const t=u.setIn(["gridConfig","rowsPerPage"],e);f({id:p,config:t})},h=[{key:"Values",id:"geocode_api_values",defaultValue:t.GeocodeAPI.Values},{key:"Upload",id:"geocode_api_upload",defaultValue:t.GeocodeAPI.Upload},{key:"Descargar",id:"geocode_api_download",defaultValue:t.GeocodeAPI.Descargar},{key:"Borrar",id:"geocode_api_delete",defaultValue:t.GeocodeAPI.Borrar},{key:"GetMap",id:"geocode_api_get_map",defaultValue:t.GeocodeAPI.GetMap}];return(0,l.useEffect)((()=>{Object.keys(t.GeocodeAPI).forEach((e=>{console.log(`Valor actual de ${e} = '${null==u?void 0:u.GeocodeAPI[e]}' [defaultValue='${t.GeocodeAPI[e]}']`),(null==u?void 0:u.GeocodeAPI[e])||console.log(`Cambiando valor de ${e}`),v(e,t.GeocodeAPI[e])})),u.gridConfig||b(t.gridConfig.rowsPerPage)}),[]),e.React.createElement("div",{className:"widget-setting"},e.React.createElement(o.SettingSection,{className:"map-selector-section",title:"Select Map Widget"},e.React.createElement(o.SettingRow,null,e.React.createElement(o.MapWidgetSelector,{onSelect:e=>{c.onSettingChange({id:c.id,useMapWidgetIds:e})},useMapWidgetIds:c.useMapWidgetIds}))),e.React.createElement(o.SettingSection,{title:e.React.createElement(e.FormattedMessage,{id:"geocode_api_config",defaultMessage:a.geocode_api_config})},h.map((({key:t,id:l,defaultValue:c})=>{var i;return e.React.createElement(o.SettingRow,{key:t,label:e.React.createElement(e.FormattedMessage,{id:l,defaultMessage:a[l]}),flow:"wrap"},e.React.createElement(r.TextInput,{defaultValue:String((null===(i=null==u?void 0:u.GeocodeAPI)||void 0===i?void 0:i[t])||c),onChange:e=>v(t,e.target.value)}))}))),e.React.createElement(o.SettingSection,{title:e.React.createElement(e.FormattedMessage,{id:"table_config",defaultMessage:a.table_config})},e.React.createElement(o.SettingRow,{label:e.React.createElement(e.FormattedMessage,{id:"table_rows_per_page",defaultMessage:a.table_rows_per_page}),flow:"wrap"},e.React.createElement(r.NumericInput,{value:(null===(n=null==u?void 0:u.gridConfig)||void 0===n?void 0:n.rowsPerPage)||t.gridConfig.rowsPerPage,onChange:e=>b(e),min:1}))),e.React.createElement(o.SettingSection,{title:e.React.createElement(e.FormattedMessage,{id:"refresh_label",defaultMessage:a.refresh_label})},e.React.createElement(o.SettingRow,{label:e.React.createElement(e.FormattedMessage,{id:"refresh_button_label",defaultMessage:a.refresh_button_label})},e.React.createElement(r.Checkbox,{defaultChecked:"boolean"==typeof(null===(s=null==u?void 0:u.refresh)||void 0===s?void 0:s.button)?u.refresh.button:t.refresh.button,onChange:e=>(e=>{const t=u.setIn(["refresh","button"],e);f({id:p,config:t})})(e.target.checked)})),e.React.createElement(o.SettingRow,{label:e.React.createElement(e.FormattedMessage,{id:"refresh_interval_button_label",defaultMessage:a.refresh_interval_button_label})},e.React.createElement(r.Checkbox,{defaultChecked:"boolean"==typeof(null===(d=null==u?void 0:u.refresh)||void 0===d?void 0:d.doInterval)?u.refresh.doInterval:t.refresh.doInterval,onChange:e=>(e=>{const t=u.setIn(["refresh","doInterval"],e);m(e),f({id:p,config:t})})(e.target.checked)})),_&&e.React.createElement(o.SettingRow,{label:e.React.createElement(e.FormattedMessage,{id:"refresh_interval_time_label",defaultMessage:a.refresh_interval_time_label}),flow:"wrap"},e.React.createElement(r.NumericInput,{value:(null===(g=null==u?void 0:u.refresh)||void 0===g?void 0:g.time)||t.refresh.time,onChange:e=>(e=>{const t=u.setIn(["refresh","time"],e);f({id:p,config:t})})(e),precision:2}))))};function s(e){c.p=e}})(),i})())}}}));